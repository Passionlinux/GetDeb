Description: Correctly detect UbuntuDistro in HTTP source
 When the installation source is the Ubuntu HTTP archive, an ISO or mini ISO mounted
 (or even cobbler imported ISO, Mini ISO) on a  HTTP source (or FTP in such case),
 the UbuntDistro is not correctly detected causing the installation to fail by not
 detecting correctly Ubuntu as a source as well as architectures..
 This patch fixes the approach to determine whether the source is an Ubuntu source.
Author: Andres Rodriguez <andreserl@ubuntu.com>
Bug-Ubuntu: https://bugs.launchpad.net/bugs/884765
Forwarded: no
Updated: 2014-02-17

--- a/virtinst/urlfetcher.py
+++ b/virtinst/urlfetcher.py
@@ -899,9 +899,12 @@
     def _set_media_paths(self):
         self._boot_iso_paths   = ["%s/netboot/mini.iso" % self._url_prefix]
 
-        hvmroot = "%s/netboot/%s/%s/" % (self._url_prefix,
-                                         self._installer_dirname,
-                                         self._treeArch)
+        if self._prefix:
+            hvmroot = "%s/netboot/%s/%s/" % (self._url_prefix,
+                                             self._installer_dirname,
+                                             self._treeArch)
+        else:
+            hvmroot = ""
         initrd_basename = "initrd.gz"
         kernel_basename = "linux"
         if self._treeArch in ["ppc64el"]:
@@ -961,16 +964,30 @@
     urldistro = "ubuntu"
 
     def isValidStore(self):
+        # For regular trees
         if self.fetcher.hasFile("%s/MANIFEST" % self._url_prefix):
-            # For regular trees
             filename = "%s/MANIFEST" % self._url_prefix
             regex = ".*%s.*" % self._installer_dirname
         elif self.fetcher.hasFile("install/netboot/version.info"):
             # For trees based on ISO's
             self._url_prefix = "install"
+            if fetcher.hasFile("install/netboot/ubuntu-installer/i386"):
+                self._treeArch = "i386"
+            elif fetcher.hasFile("install/netboot/ubuntu-installer/amd64"):
+                self._treeArch = "amd64"
             self._set_media_paths()
             filename = "%s/netboot/version.info" % self._url_prefix
             regex = "%s*" % self.name
+        elif fetcher.hasFile("initrd.gz") and fetcher.hasFile("linux"):
+            # For trees based on mini ISO's
+            self._url_prefix = ""
+            if fetcher.hasFile("boot/grub/x86_64-efi"):
+                self._treeArch = "amd64"
+            else:
+                self._treeArch = "i386"
+            self._set_media_paths()
+            filename = "f10.txt"
+            regex = "%s*" % self.name
         else:
             return False
 
