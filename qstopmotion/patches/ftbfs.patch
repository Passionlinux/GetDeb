# The Debug causes compile errors. Remove it.
Index: qstopmotion-2.0.2/src/frontends/qtfrontend/qtfrontend.cpp
===================================================================
--- qstopmotion-2.0.2.orig/src/frontends/qtfrontend/qtfrontend.cpp	2015-09-23 19:32:56.332747447 +0200
+++ qstopmotion-2.0.2/src/frontends/qtfrontend/qtfrontend.cpp	2015-09-23 19:32:56.332747447 +0200
@@ -39,7 +39,6 @@
 
 QtFrontend::QtFrontend(int &argc, char **argv)
 {
-    qDebug("QtFrontend::Constructor --> Start");
 
     domainFacade         = NULL;
     viewFacade           = NULL;
@@ -62,13 +61,11 @@
 #endif
 
 
-    qDebug("QtFrontend::Constructor --> End");
 }
 
 
 QtFrontend::~QtFrontend()
 {
-    qDebug("QtFrontend::Destructor --> Start");
 
     // Save the size and position of the application
     QSize appSize = mw->size();
@@ -124,7 +121,6 @@
                 tr("You do not have the necessary permissions to run qStopMotion.\n"
                 "You need permission to create the .qstopmotion directory in your home directory."));
 
-            qDebug("QtFrontend::checkApplicationDirectory --> End (Error)");
             return 1;
         }
     }
@@ -143,7 +139,6 @@
                 tr("You do not have the necessary permissions to run qStopMotion.\n"
                 "You need permission to read, write and execute on the .qstopmotion directory."));
 
-            qDebug("QtFrontend::checkApplicationDirectory --> End (Error)");
             return 1;
         }
     }
@@ -343,27 +338,22 @@
 
     // this->testMainWidget();
 
-    qDebug("QtFrontend::init --> End");
 }
 
 
 bool QtFrontend::handleArguments(int argc, char **argv)
 {
-    qDebug("QtFrontend::handleArguments --> Start");
 
     if (argc < 2) {
         // No arguments
-        qDebug("QtFrontend::handleArguments --> End (false)");
         return false;
     }
 
     if (QFileInfo(argv[1]).isReadable()) {
         mw->openProject(argv[1]);
-        qDebug("QtFrontend::handleArguments --> End (true)");
         return true;
     }
 
-    qDebug("QtFrontend::handleArguments --> End (false)");
     return false;
 }
 
@@ -618,7 +608,6 @@
 
 void QtFrontend::initializePreferences()
 {
-    qDebug("QtFrontend::initializePreferences --> Start");
 
     QDir homeDir = QDir::home();
     QString preferencesFile = homeDir.absolutePath();
@@ -633,20 +622,14 @@
         // File doesn't exist or is corrupt
         setDefaultPreferences();
     }
-
-    qDebug("QtFrontend::initializePreferences --> End");
 }
 
 
 void QtFrontend::setDefaultPreferences()
 {
-    qDebug("QtFrontend::setDefaultPreferences --> Start");
-
     preferencesTool->setVersion(PreferencesTool::preferencesVersion);
     preferencesTool->setBasicPreferenceDefaults();
     // preferencesTool->setEncoderDefaults();
-
-    qDebug("QtFrontend::setDefaultPreferences --> End");
 }
 
 
@@ -731,11 +714,8 @@
 {
     bool ret;
 
-    qDebug("QtFrontend::startGrabber --> Start");
-
     ret = mw->startGrabber();
 
-    qDebug("QtFrontend::startGrabber --> End");
     return ret;
 }
 
@@ -744,22 +724,15 @@
 {
     bool ret;
 
-    qDebug("QtFrontend::on --> Start");
-
     ret = mw->isGrabberInited();
 
-    qDebug("QtFrontend::on --> End");
     return ret;
 }
 
 
 void QtFrontend::stopGrabber()
 {
-    qDebug("QtFrontend::stopGrabber --> Start");
-
     mw->stopGrabber();
-
-    qDebug("QtFrontend::stopGrabber --> End");
 }
 
 
@@ -889,57 +862,47 @@
 
 bool QtFrontend::isRecoveryMode()
 {
-    qDebug("QtFrontend::isRecoveryMode --> Start");
 
     if (QFile::exists(getTempDirName()) == false) {
-        qDebug("QtFrontend::isRecoveryMode --> End (False)");
         return false;
     }
 
     // Everything is intact and we have to run in recovery mode
-    qDebug("QtFrontend::isRecoveryMode --> End (True)");
     return true;
 }
 
 
 bool QtFrontend::recoverProject()
 {
-    qDebug("QtFrontend::recoverProject --> Start");
 
     int ret = askQuestion(tr("Recovery"),
                   tr("Something caused qStopmotion to exit abnormally\n"
                   "last time it was runned. Do you want to recover?"));
     // The user wants to recover
     if (ret != 0) {
-        qDebug("QtFrontend::recoverProject --> End (False)");
         return false;
     }
 
     mw->setWindowTitle(tr("qStopMotion - Recovered Project"));
     bool recovered = getProject()->recoverProject();
 
-    qDebug("QtFrontend::recoverProject --> End");
     return recovered;
 }
 
 
 void QtFrontend::startDialog()
 {
-    qDebug("QtFrontend::startDialog --> Start");
 
     mw->startDialog();
 
-    qDebug("QtFrontend::startDialog --> End");
 }
 
 
 void QtFrontend::setToolBarState(int newState)
 {
-    qDebug("MainWindowGUI::setToolBarState --> Start");
 
     mw->setToolBarState(newState);
 
-    qDebug("MainWindowGUI::setToolBarState --> End");
 }
 
 
@@ -1071,55 +1034,45 @@
 
 void QtFrontend::test(QWidget *parentWidget, int level)
 {
-    QDebug(QtDebugMsg) << "QtFrontend::test of level: " << level << " --> Start <<<<<<<<<<<<<<<=======================";
 
     QObjectList testList = parentWidget->children();
     int testSize = testList.size();
     if (testSize == 0) {
-        QDebug(QtDebugMsg) << "QtFrontend::test of level: " << level << " --> End (no childs) <<<<<<<<<<<<<<<=======================";
         return;
     }
-    QDebug(QtDebugMsg) << "QtFrontend::test of level: " << level << " --> testSize: " << testSize;
     for (int testIndex = 0 ; testIndex < testSize ; testIndex++ ) {
         if ((level == 1) && (testIndex > 3)) {
-            QDebug(QtDebugMsg) << "QtFrontend::test: ++++++++++++++++++++++ Break +++++++++++++++++";
         }
 
         QObject *testObject = testList.at(testIndex);
         if (testObject == 0) {
-            QDebug(QtDebugMsg) << "QtFrontend::test of level: " << level << " index: " << testIndex << " --> Widget korrupt !!!";
             continue;
         }
 
         if (testObject->objectName().isEmpty()) {
-            QDebug(QtDebugMsg) << "QtFrontend::test of level: " << level << " index: " << testIndex << " --> testObject.className: " << testObject->metaObject()->className();
+
         }
         else {
-            QDebug(QtDebugMsg) << "QtFrontend::test of level: " << level << " index: " << testIndex << " --> testObject.objectName: " << testObject->objectName();
+
         }
         if (testObject->parent() != parentWidget) {
-            QDebug(QtDebugMsg) << "QtFrontend::test: ?????????????? Parent different ?????????????";
+
         }
 
         QWidget *testWidget = qobject_cast<QWidget *>(testObject);
         if (testWidget == 0) {
-            QDebug(QtDebugMsg) << "QtFrontend::test of level: " << level << " index: " << testIndex << " --> no Widget !!!";
             continue;
         }
 
-        QDebug(QtDebugMsg) << "QtFrontend::test of level: " << level << " index: " << testIndex << " --> testWidget.winID: " << testWidget->winId();
         this->test(testWidget, (level+1));
     }
 
-    QDebug(QtDebugMsg) << "QtFrontend::test of level: " << level << " --> End <<<<<<<<<<<<<<<=======================";
 }
 
 
 void QtFrontend::testMainWidget()
 {
-    QDebug(QtDebugMsg) << "QtFrontend::testMainWidget --> Start";
 
     test(this->mw, 0);
 
-    QDebug(QtDebugMsg) << "QtFrontend::testMainWidget --> End";
 }
