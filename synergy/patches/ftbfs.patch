Index: synergy-1.8.4/src/lib/arch/unix/ArchNetworkBSD.cpp
===================================================================
--- synergy-1.8.4.orig/src/lib/arch/unix/ArchNetworkBSD.cpp	2016-10-11 18:01:29.602713134 +0200
+++ synergy-1.8.4/src/lib/arch/unix/ArchNetworkBSD.cpp	2016-10-11 18:01:29.602713134 +0200
@@ -332,7 +332,7 @@
 		do {
 			ignore = read(unblockPipe[0], dummy, sizeof(dummy));
 		} while (errno != EAGAIN);
-
+		ignore++;
 		// don't count this unblock pipe in return value
 		--n;
 	}
@@ -505,6 +505,7 @@
 		int ignore;
 
 		ignore = write(unblockPipe[1], &dummy, 1);
+		ignore++;
 	}
 }
 
Index: synergy-1.8.4/src/lib/synergy/ArgsBase.cpp
===================================================================
--- synergy-1.8.4.orig/src/lib/synergy/ArgsBase.cpp	2016-10-11 18:01:29.602713134 +0200
+++ synergy-1.8.4/src/lib/synergy/ArgsBase.cpp	2016-10-11 18:01:29.602713134 +0200
@@ -21,15 +21,9 @@
 ArgsBase::ArgsBase() :
 #if SYSAPI_WIN32
 m_daemon(false), // daemon mode not supported on windows (use --service)
-m_debugServiceWait(false),
-m_pauseOnExit(false),
-m_stopOnDeskSwitch(false),
 #else
 m_daemon(true), // backward compatibility for unix (daemon by default)
 #endif
-#if WINAPI_XWINDOWS
-m_disableXInitThreads(false),
-#endif
 m_backend(false),
 m_restartable(true),
 m_noHooks(false),
@@ -40,6 +34,14 @@
 m_disableTray(false),
 m_enableIpc(false),
 m_enableDragDrop(false),
+#if SYSAPI_WIN32
+m_debugServiceWait(false),
+m_pauseOnExit(false),
+m_stopOnDeskSwitch(false),
+#endif
+#if WINAPI_XWINDOWS
+m_disableXInitThreads(false),
+#endif
 m_shouldExit(false),
 m_synergyAddress(),
 m_enableCrypto(false),
Index: synergy-1.8.4/src/lib/platform/XWindowsEventQueueBuffer.cpp
===================================================================
--- synergy-1.8.4.orig/src/lib/platform/XWindowsEventQueueBuffer.cpp	2016-10-11 18:01:29.602713134 +0200
+++ synergy-1.8.4/src/lib/platform/XWindowsEventQueueBuffer.cpp	2016-10-11 18:01:29.602713134 +0200
@@ -54,10 +54,10 @@
 
 XWindowsEventQueueBuffer::XWindowsEventQueueBuffer(
 		Display* display, Window window, IEventQueue* events) :
-	m_events(events),
 	m_display(display),
 	m_window(window),
-	m_waiting(false)
+	m_waiting(false),
+	m_events(events)
 {
 	assert(m_display != NULL);
 	assert(m_window  != None);
Index: synergy-1.8.4/src/lib/platform/XWindowsScreen.cpp
===================================================================
--- synergy-1.8.4.orig/src/lib/platform/XWindowsScreen.cpp	2016-10-11 18:01:29.602713134 +0200
+++ synergy-1.8.4/src/lib/platform/XWindowsScreen.cpp	2016-10-11 18:01:29.602713134 +0200
@@ -97,6 +97,7 @@
 		bool disableXInitThreads,
 		int mouseScrollDelta,
 		IEventQueue* events) :
+	PlatformScreen(events),
 	m_isPrimary(isPrimary),
 	m_mouseScrollDelta(mouseScrollDelta),
 	m_display(NULL),
@@ -121,8 +122,7 @@
 	m_xkb(false),
 	m_xi2detected(false),
 	m_xrandr(false),
-	m_events(events),
-	PlatformScreen(events)
+	m_events(events)
 {
 	assert(s_screen == NULL);
 
@@ -1273,7 +1273,6 @@
 				cookie->extension == xi_opcode) {
 			if (cookie->evtype == XI_RawMotion) {
 				// Get current pointer's position
-				Window root, child;
 				XMotionEvent xmotion;
 				xmotion.type = MotionNotify;
 				xmotion.send_event = False; // Raw motion
Index: synergy-1.8.4/src/lib/net/SecureSocket.cpp
===================================================================
--- synergy-1.8.4.orig/src/lib/net/SecureSocket.cpp	2016-10-11 11:14:27.000000000 +0200
+++ synergy-1.8.4/src/lib/net/SecureSocket.cpp	2016-10-11 18:02:27.231730690 +0200
@@ -670,7 +670,7 @@
 SecureSocket::verifyCertFingerprint()
 {
 	// calculate received certificate fingerprint
-	X509 *cert = cert = SSL_get_peer_certificate(m_ssl->m_ssl);
+	X509 *cert = SSL_get_peer_certificate(m_ssl->m_ssl);
 	EVP_MD* tempDigest;
 	unsigned char tempFingerprint[EVP_MAX_MD_SIZE];
 	unsigned int tempFingerprintLen;
