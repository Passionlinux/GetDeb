Description: port to messaging menu
Author: Dmitrijs Ledkovs <dmitrij.ledkov@ubuntu.com>
Bug-Ubuntu: https://bugs.launchpad.net/bugs/1040259
Last-Update: 2014-02-13

Index: liferea-1.10.19/configure.ac
===================================================================
--- liferea-1.10.19.orig/configure.ac	2016-04-22 21:33:42.460561699 +0200
+++ liferea-1.10.19/configure.ac	2016-04-22 21:33:42.456561601 +0200
@@ -23,7 +23,7 @@
 GLIB_GSETTINGS
 
 AC_ARG_ENABLE(libnotify, AS_HELP_STRING([--disable-libnotify],[compile without libnotify support]),,enable_libnotify=yes)
-AC_ARG_ENABLE(libindicate, AS_HELP_STRING([--disable-libindicate],[compile without libindicate support]),,enable_libindicate=yes)
+AC_ARG_ENABLE(messaging-menu, AS_HELP_STRING([--disable-messaging-menu],[compile without messaging-menu support]),,enable_messaging_menu=yes)
 AC_ARG_ENABLE(libunity, AS_HELP_STRING([--disable-libunity],[compile without libunity support]),,enable_libunity=yes)
 
 AC_CHECK_FUNCS([strsep])
@@ -48,30 +48,22 @@
 AM_CONDITIONAL(WITH_LIBNOTIFY, test "x$enable_libnotify" = "xyes")
 
 dnl *********
-dnl libindicate
+dnl messaging-menu
 dnl *********
 
-if test "x$enable_libindicate" = "xyes"; then
-   dnl Try 0.7 first
-   PKG_CHECK_MODULES([LIBINDICATE], indicate-0.7 indicate-gtk3-0.7,enable_libindicate=yes,enable_libindicate=no)
-   AC_SUBST(LIBINDICATE_CFLAGS)
-   AC_SUBST(LIBINDICATE_LIBS)
-
-   dnl But 0.6 will also do...
-   if test "x$enable_libindicate" = "xno"; then
-      PKG_CHECK_MODULES([LIBINDICATE], indicate-0.6 indicate-gtk3-0.6,enable_libindicate=yes,enable_libindicate=no)
-      AC_SUBST(LIBINDICATE_CFLAGS)
-      AC_SUBST(LIBINDICATE_LIBS)
-   fi
+if test "x$enable_messaging_menu" = "xyes"; then
+   PKG_CHECK_MODULES([MESSAGING_MENU], messaging-menu,enable_messaging_menu=yes,enable_messaging_menu=no)
+   AC_SUBST(MESSAGING_MENU_CFLAGS)
+   AC_SUBST(MESSAGING_MENU_LIBS)
 else
-   enable_libindicate=no
+   enable_messaging_menu=no
 fi
 
-if test "x$enable_libindicate" = "xyes"; then
-  AC_DEFINE(HAVE_LIBINDICATE, 1, [Define if libindicate support is enabled])
+if test "x$enable_messaging_menu" = "xyes"; then
+  AC_DEFINE(HAVE_MESSAGING_MENU, 1, [Define if messaging-menu support is enabled])
 fi
 
-AM_CONDITIONAL(WITH_LIBINDICATE, test "x$enable_libindicate" = "xyes")
+AM_CONDITIONAL(WITH_MESSAGING_MENU, test "x$enable_messaging_menu" = "xyes")
 
 dnl *********
 dnl libunity
@@ -169,7 +161,7 @@
 echo "$PACKAGE $VERSION"
 echo
 echo "Use libnotify................... : $enable_libnotify"
-echo "Use libindicate................. : $enable_libindicate"
+echo "Use messaging-menu.............. : $enable_messaging_menu"
 echo "Use libunity.................... : $enable_libunity"
 echo
 eval eval echo Liferea will be installed in $bindir.
Index: liferea-1.10.19/src/Makefile.am
===================================================================
--- liferea-1.10.19.orig/src/Makefile.am	2016-04-22 21:33:42.460561699 +0200
+++ liferea-1.10.19/src/Makefile.am	2016-04-22 21:33:42.456561601 +0200
@@ -83,9 +83,9 @@
 
 endif
 
-if WITH_LIBINDICATE
+if WITH_MESSAGING_MENU
 
-liferea_LDADD += $(LIBINDICATE_LIBS)
+liferea_LDADD += $(MESSAGING_MENU_LIBS)
 
 endif
 
Index: liferea-1.10.19/src/ui/Makefile.am
===================================================================
--- liferea-1.10.19.orig/src/ui/Makefile.am	2016-04-22 21:33:42.460561699 +0200
+++ liferea-1.10.19/src/ui/Makefile.am	2016-04-22 21:33:42.456561601 +0200
@@ -8,7 +8,7 @@
 
 noinst_LIBRARIES = libliui.a
 
-libliui_a_CFLAGS = $(PACKAGE_CFLAGS) $(LIBINDICATE_CFLAGS) $(LIBUNITY_CFLAGS)
+libliui_a_CFLAGS = $(PACKAGE_CFLAGS) $(MESSAGING_MENU_CFLAGS) $(LIBUNITY_CFLAGS)
 libliui_a_SOURCES = \
 	auth_dialog.c auth_dialog.h \
 	browser_tabs.c browser_tabs.h \
Index: liferea-1.10.19/src/ui/ui_indicator.c
===================================================================
--- liferea-1.10.19.orig/src/ui/ui_indicator.c	2016-04-22 21:33:42.460561699 +0200
+++ liferea-1.10.19/src/ui/ui_indicator.c	2016-04-22 21:33:42.456561601 +0200
@@ -24,13 +24,10 @@
 
 #include "ui_indicator.h"
 
-#ifdef HAVE_LIBINDICATE
+#ifdef HAVE_MESSAGING_MENU
 
 #include <gtk/gtk.h>
-#include <libindicate/server.h>
-#include <libindicate/indicator.h>
-#include <libindicate-gtk/indicator.h>
-#include <libindicate/interests.h>
+#include <messaging-menu.h>
 #include "feedlist.h"
 #include "ui/feed_list_view.h"
 #include "ui/liferea_shell.h"
@@ -39,15 +36,9 @@
 
 /* The maximum number of feeds to display in the indicator menu. */
 #define MAX_INDICATORS      6
-/* Whether Liferea should set the indicator menu to attention
-   status whenever new feed items are downloaded. Since news feeds
-   do not typically require the user's urgent attention, unlike
-   mail and IM messages, this is set to false by default. */
-#define SET_DRAW_ATTENTION  FALSE
 
 static struct indicator_priv {
-	IndicateServer *server;
-	gboolean visible;
+	MessagingMenuApp *server;
 	GPtrArray *indicators;
 } *indicator_priv = NULL;
 
@@ -55,7 +46,7 @@
  The desktop file to initialize the indicator menu with. Resolves to
  a string like "/usr/share/applications/liferea.desktop".
 */ 
-static const char *DESKTOP_FILE = PACKAGE_DATA_DIR G_DIR_SEPARATOR_S "applications" G_DIR_SEPARATOR_S "liferea.desktop";
+static const char *DESKTOP_FILE = "liferea.desktop";
 
 static void
 remove_all_indicators () {
@@ -66,44 +57,18 @@
  Called when the main "Liferea" entry in the indicator menu is clicked.
 */ 
 static void
-on_indicator_server_clicked (IndicateServer *server, gchar *type, gpointer user_data)
+on_indicator_server_clicked (MessagingMenuApp *server, gchar *source_id, gpointer user_data)
 {
 	liferea_shell_present ();
 	remove_all_indicators ();
 }
 
 /*
- Called when the indicator container applet is shown.
-*/ 
-static void
-on_indicator_interest_added (IndicateServer *server, guint interest, gpointer user_data)
-{
-	if (interest != INDICATE_INTEREST_SERVER_SIGNAL)
-		return;
-
-	indicator_priv->visible = TRUE;
-	ui_tray_update ();
-}
-
-/*
- Called when the indicator container applet is hidden.
-*/ 
-static void
-on_indicator_interest_removed (IndicateServer *server, guint interest, gpointer user_data)
-{
-	if (interest != INDICATE_INTEREST_SERVER_SIGNAL)
-		return;
-
-	indicator_priv->visible = FALSE;
-	ui_tray_update ();
-}
-
-/*
  Called when the indicator menu entry for a specific feed
  is clicked, meaning Liferea should switch to that feed.
 */ 
 static void
-on_indicator_clicked (IndicateIndicator *indicator, guint timestamp, gpointer user_data)
+on_indicator_clicked (MessagingMenuApp *indicator, gchar *source_id, gpointer user_data)
 {
 	feed_list_view_select ((nodePtr) user_data);
 	liferea_shell_present ();
@@ -116,8 +81,7 @@
 	if (indicator_priv->server == NULL || indicator == NULL) 
 		return;
 	
-	indicate_server_remove_indicator (indicator_priv->server, INDICATE_INDICATOR(indicator));
-	g_object_unref (G_OBJECT (indicator));
+	messaging_menu_app_remove_source (indicator_priv->server, (char *)(indicator));
 }
 
 void
@@ -127,18 +91,13 @@
 		return;
 	
 	indicator_priv = g_new0 (struct indicator_priv, 1);
-	indicator_priv->visible = FALSE;
 	indicator_priv->indicators = g_ptr_array_new_with_free_func (destroy_indicator);
 	
-	indicator_priv->server = indicate_server_ref_default();
-	indicate_server_set_type (indicator_priv->server, "message.im");
-	indicate_server_set_desktop_file (indicator_priv->server, DESKTOP_FILE);
-	
-	g_signal_connect (G_OBJECT (indicator_priv->server), "server-display", G_CALLBACK (on_indicator_server_clicked), NULL);
-	g_signal_connect (G_OBJECT (indicator_priv->server), "interest-added", G_CALLBACK (on_indicator_interest_added), NULL);
-	g_signal_connect (G_OBJECT (indicator_priv->server), "interest-removed", G_CALLBACK (on_indicator_interest_removed), NULL);
+	indicator_priv->server = messaging_menu_app_new (DESKTOP_FILE);
+	messaging_menu_app_register (indicator_priv->server);
+
+	g_signal_connect (G_OBJECT (indicator_priv->server), "activate-source", G_CALLBACK (on_indicator_server_clicked), NULL);
 	
-	indicate_server_show (indicator_priv->server);
 	ui_indicator_update ();
 }
 
@@ -159,9 +118,10 @@
 static void
 add_node_indicator (nodePtr node)
 {
-	IndicateIndicator *indicator;
-	GdkPixbuf *pixbuf;
+	GFile *file;
+	GIcon *icon;
 	gchar count[10];
+	gchar *signal;
 	
 	if (indicator_priv->indicators->len >= MAX_INDICATORS)
 		return;
@@ -176,30 +136,28 @@
 	if (node->unreadCount == 0)
 		return;
 	
-	indicator = indicate_indicator_new_with_server (indicator_priv->server);
-	g_signal_connect (indicator, "user-display", G_CALLBACK (on_indicator_clicked), node);
-
-	/* load favicon */
-	pixbuf = gdk_pixbuf_new_from_file (node->iconFile, NULL);
+	file = g_file_new_for_path (node->iconFile);
+	icon = g_file_icon_new (file);
 
-	/* display favicon */
-	indicate_gtk_indicator_set_property_icon (indicator, "icon", pixbuf);
-	g_object_unref (pixbuf);
-
-	sprintf (count, "%u", node->unreadCount);
-	indicate_indicator_set_property (indicator, "name", node->title);
-	indicate_indicator_set_property (indicator, "count", count);
-#if SET_DRAW_ATTENTION
-	indicate_indicator_set_property_bool (indicator, "draw-attention", TRUE);
-#endif
-	g_ptr_array_add (indicator_priv->indicators, indicator);
+	messaging_menu_app_append_source_with_count(
+		indicator_priv->server,
+		node->id,
+		icon,
+		node->title,
+		node->unreadCount);
+
+	signal = g_strdup_printf("activate-source::%s", node->id);
+	g_signal_connect (indicator_priv->server, signal, G_CALLBACK (on_indicator_clicked), node);
+	g_ptr_array_add (indicator_priv->indicators, node->id);
+
+	g_object_unref(icon);
+	g_object_unref(file);
+	g_free(signal);
 }
 
 void
 ui_indicator_update ()
 {
-	guint index;
-
 	/* Do not update indicators if the user is interacting with the main window */
 	if (!indicator_priv || gtk_window_is_active (GTK_WINDOW (liferea_shell_get_window ())))
 		return;
@@ -208,16 +166,12 @@
 	remove_all_indicators ();
 	/* ...then walk the tree and add an indicator for each unread feed */
 	feedlist_foreach (add_node_indicator);
-
-	/* revert order of items */
-	for (index = indicator_priv->indicators->len; index > 0; index--)
-		indicate_indicator_show (g_ptr_array_index (indicator_priv->indicators, index - 1));	
 }
 
 gboolean
 ui_indicator_is_visible ()
 {
-	return indicator_priv && indicator_priv->visible;
+	return TRUE;
 }
 
-#endif  /* HAVE_LIBINDICATE */
+#endif  /* HAVE_MESSAGING_MENU */
Index: liferea-1.10.19/src/ui/ui_indicator.h
===================================================================
--- liferea-1.10.19.orig/src/ui/ui_indicator.h	2016-04-22 21:33:42.460561699 +0200
+++ liferea-1.10.19/src/ui/ui_indicator.h	2016-04-22 21:33:42.456561601 +0200
@@ -23,7 +23,7 @@
 
 #include <glib.h>
 
-#ifdef HAVE_LIBINDICATE
+#ifdef HAVE_MESSAGING_MENU
 
 /**
  * Setup indicator widget.
@@ -47,7 +47,7 @@
  */
 gboolean ui_indicator_is_visible (void);
 
-#else  /* HAVE_LIBINDICATE */
+#else  /* HAVE_MESSAGING_MENU */
 
 /*
  If Liferea is compiled without libindicate support, all indicator
@@ -60,6 +60,6 @@
 static inline void ui_indicator_update () {}
 static inline gboolean ui_indicator_is_visible () { return FALSE; }
 
-#endif /* HAVE_LIBINDICATE */
+#endif /* HAVE_MESSAGING_MENU */
 
 #endif  /* _UI_INDICATOR_H */
